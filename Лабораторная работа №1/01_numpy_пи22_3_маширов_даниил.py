# -*- coding: utf-8 -*-
"""01_numpy_ПИ22-3_Маширов_Даниил.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UK_3hXRxgXWRDj33reQuJaqNSQTbFAqx

## Лабораторная работа №1

1. Файл `minutes_n_ingredients.csv` содержит информацию об идентификаторе рецепта, времени его выполнения в минутах и количестве необходимых ингредиентов. Считайте данные из этого файла в виде массива `numpy` типа `int32`, используя `np.loadtxt`. Выведите на экран первые 5 строк массива.
"""

import numpy as np
data = np.loadtxt('minutes_n_ingredients.csv', delimiter=',', skiprows=1, dtype=np.int32)
print(data[:5])

"""2. Вычислите среднее значение, минимум, максимум и медиану по каждому из столбцов, кроме первого."""

print(data[:, 1:].mean(axis=0)) # среднее значение
print(data[:, 1:].min(axis=0)) # минимум 
print(data[:, 1:].max(axis=0)) # максимум 
print(np.median(data[:, 1:], axis=0)) # медиана

"""3. Ограничьте сверху значения продолжительности выполнения рецепта значением квантиля $q_{0.75}$. """

border = np.quantile(data[:, 1], q=0.75)
data[:, 1] = data[:, 1].clip(max=border)
print(border)

"""4. Посчитайте, для скольких рецептов указана продолжительность, равная нулю. Замените для таких строк значение в данном столбце на 1."""

print(data[data[:, 1]==0].shape[0])
data[data[:, 1]==0, 1]=1

"""5. Посчитайте, сколько уникальных рецептов находится в датасете."""

print(len(np.unique(data[:, 0], axis=0)))

"""6. Сколько и каких различных значений кол-ва ингредиентов присутвует в рецептах из датасета?"""

print(len(np.unique(data[:, 2])))
np.unique(data[:, 2])

"""7. Создайте версию массива, содержащую информацию только о рецептах, состоящих не более чем из 5 ингредиентов."""

data_v2 = data[data[:, 2] <= 5].copy()
data_v2

"""8. Для каждого рецепта посчитайте, сколько в среднем ингредиентов приходится на одну минуту рецепта. Найдите максимальное значение этой величины для всего датасета"""

average_ingr_on_min = data[:, 2] / data[:, 1]
average_ingr_on_min.mean(), average_ingr_on_min.max()

"""9. Вычислите среднее количество ингредиентов для топ-100 рецептов с наибольшей продолжительностью"""

print(data[data[:, 1].argsort()][-100:][:, 2].mean())

"""10. Выберите случайным образом и выведите информацию о 10 различных рецептах"""

random = np.random.randint(0, 999, size=10)
data[random]

"""11. Выведите процент рецептов, кол-во ингредиентов в которых меньше среднего."""

less_than_average = data[:, 2].mean()
len(data[data[:, 2] < less_than_average]) / len(data) * 100

"""12. Назовем "простым" такой рецепт, длительность выполнения которого не больше 20 минут и кол-во ингредиентов в котором не больше 5. Создайте версию датасета с дополнительным столбцом, значениями которого являются 1, если рецепт простой, и 0 в противном случае."""

simple = (data[:, 1] <= 20) & (data[:, 2] <= 5)
simple  = simple .astype(np.int32)
simple  = simple [:, np.newaxis]

simple_data  = np.hstack((data, simple ))
simple_data

"""13. Выведите процент "простых" рецептов в датасете"""

print(len(simple_data[simple_data[:, 3] == 1]) / len(simple_data) * 100)

"""14. Разделим рецепты на группы по следующему правилу. Назовем рецепты короткими, если их продолжительность составляет менее 10 минут; стандартными, если их продолжительность составляет более 10, но менее 20 минут; и длинными, если их продолжительность составляет не менее 20 минут. Создайте трехмерный массив, где нулевая ось отвечает за номер группы (короткий, стандартный или длинный рецепт), первая ось - за сам рецепт и вторая ось - за характеристики рецепта. Выберите максимальное количество рецептов из каждой группы таким образом, чтобы было возможно сформировать трехмерный массив. Выведите форму полученного массива."""

short = data[data[:, 1] < 10]
standard = data[(data[:, 1] >= 10) & (data[:, 1] < 20)]
Long = data[data[:, 1] >= 20]
stop = min([len(arr) for arr in [short, standard, Long]])
np.array([short[:stop], standard[:stop], Long[:stop]])